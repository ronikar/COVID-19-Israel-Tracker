{"version":3,"sources":["providers/getCriticalCases.ts","utils/getReportId.ts","providers/getDailyReportFromArchive.ts","providers/getDailyReport.ts","providers/getIsraelReports.ts","DailyStatus.tsx","CasesStatistics.tsx","utils/LineChartComponent.tsx","utils/BarChartComponent.tsx","ConfirmedCasesStatistics.tsx","DeathCasesStatistics.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["criticalCasesDataStartDate","moment","criticalCasesData","getReportId","date","format","REPORTS_MAP","Map","getDailyReportFromArchive","get","getTodayReport","a","fetch","res","json","reportData","confirmed","value","deaths","recovered","lastUpdate","Date","active","getDailyReport","globalReport","data","find","_","countryRegion","parseInt","isNumber","ARCHIVE_REPORTS","map","report","forEach","set","id","START_DATE","toDate","reports","currentDate","_isToday","push","basicReport","_createDailyReport","length","setDate","getDate","todayBasicReport","previousReport","totalConfirmed","totalDeaths","totalRecovered","activeCases","dailyConfirmed","dailyRecovered","closeCases","dailyDeaths","criticalCases","index","diff","getCriticalCases","mildConditionCases","console","log","first","second","CovidDailyStatus","dailyReport","className","DailyStatusCube","title","total","daily","componentClassName","CasesStatistics","ActiveCasesCube","CloseCasesCube","activeRatio","totalRatio","toFixed","closeRatio","LineChartComponent","xAxizDataKeys","lineDataKeys","formatter","width","height","strokeDasharray","dataKey","item","type","stroke","color","strokeWidth","dot","BarChartComponent","barDataKeys","margin","top","right","left","bottom","fill","TOTAL_LINE_DATA_KEYS","DAILY_BAR_DATA_KEYS","ACTIVE_LINE_DATA_KEYS","CRITICAL_LINE_DATA_KEYS","ConfirmedCasesStatistics","criticalPercentageLineDataKeys","useMemo","reportsWithCriticalCases","filter","criticalCasesPercentage","percentage","__","DeathCasesStatistics","totalLineDataKeys","dailyBarDataKeys","Loader","App","useState","setReports","useEffect","getReports","then","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"ywTAEMA,EAA6BC,IAAO,aAAc,cAClDC,EAAoB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,K,YCDlG,SAASC,EAAYC,GACxB,OAAOH,IAAOG,GAAMC,OAAO,c,aCEzBC,EAAc,IAAIC,IAMjB,SAASC,EAA0BJ,GACtC,OAAOE,EAAYG,IAAIN,EAAYC,ICRhC,SAAeM,IAAtB,+B,4CAAO,sCAAAC,EAAA,sEACeC,MAAM,mDADrB,cACGC,EADH,gBAEsBA,EAAIC,OAF1B,cAEGC,EAFH,OAIGC,EAAYD,EAAWC,UAAUC,MACjCC,EAASH,EAAWG,OAAOD,MAC3BE,EAAYJ,EAAWI,UAAUF,MACjCG,EAAa,IAAIC,KAAKN,EAAWK,YAPpC,kBASI,CAAEJ,YAAWE,SAAQC,YAAWG,OAAQN,GAAaE,EAASC,GAAYC,eAT9E,6C,sBAYA,SAAeG,EAAtB,kC,4CAAO,WAA8BnB,GAA9B,2BAAAO,EAAA,sEACeC,MAAM,wCAAD,OAAyCX,IAAOG,GAAMC,OAAO,cADjF,cACGQ,EADH,gBAEwBA,EAAIC,OAF5B,cAEGU,EAFH,OAGGC,EAAOD,EAAaE,MAAK,SAACC,GAAD,MAAgC,WAApBA,EAAEC,iBAEvCZ,EAAYa,SAAQ,OAACJ,QAAD,IAACA,OAAD,EAACA,EAAMT,WAC3BE,EAASW,SAAQ,OAACJ,QAAD,IAACA,OAAD,EAACA,EAAMP,QACxBC,EAAYU,SAAQ,OAACJ,QAAD,IAACA,OAAD,EAACA,EAAMN,WAC3BG,EAASQ,mBAAQ,OAACL,QAAD,IAACA,OAAD,EAACA,EAAMH,QAAUO,SAASJ,EAAKH,QAAUN,GAAaE,EAASC,GARnF,kBAUI,CAAEC,WAAYhB,EAAMY,YAAWE,SAAQC,YAAWG,WAVtD,6C,sBDTSS,EAAgBC,KAAI,SAAAC,GAAM,sBAASA,EAAT,CAAiB7B,KAAM,IAAIiB,KAAKY,EAAO7B,WAEzE8B,SAAQ,SAAAD,GAAM,OAAI3B,EAAY6B,IAAIF,EAAOG,GAAIH,MESrD,IACMI,EAAapC,IAAO,aADN,cACiCqC,S,4CAE9C,oCAAA3B,EAAA,sDACG4B,EAAiC,GAEjCC,EAAcH,EAHjB,UAIKI,EAASD,GAJd,sBAKOP,EAASzB,EAA0BgC,IAL1C,gBAOaD,EAAQG,KAAKT,GAP1B,wCAS+BV,EAAeiB,GAT9C,QASWG,EATX,OAUKJ,EAAQG,KAAKE,EAAmBD,EAAaJ,EAAQA,EAAQM,OAAS,KAV3E,QAaCL,EAAYM,QAAQN,EAAYO,UAAY,GAb7C,wCAgB4BrC,IAhB5B,eAgBGsC,EAhBH,OAkBHT,EAAQG,KAAKE,EAAmBI,EAAkBT,EAAQA,EAAQM,OAAS,KAlBxE,kBAoBIN,GApBJ,6C,sBAuBP,SAASK,EAAmBD,EAA0CM,GAAsC,IACrFC,EAIMP,EAJjB3B,UACImC,EAGaR,EAHrBzB,OACakC,EAEQT,EAFnBxB,UACQkC,EACWV,EADnBrB,OACUlB,EAASuC,EAArBvB,WAEEgB,EAAKjC,EAAYC,GAEjBkD,EAAiBJ,EAAiBD,EAAeC,eACjDK,EAAiBH,EAAiBH,EAAeG,eAKnDnB,EAA8B,CAAEG,KAAIhC,OAAM8C,iBAAgBC,cAAaC,iBAAgBC,cAAaG,WAFrFN,EAAiBG,EAEgFC,iBAAgBG,YAJhHN,EAAcF,EAAeE,YAIgGI,kBAE3IG,EJxDH,SAA0BtD,GAC7B,IAAMuD,EAAQ1D,IAAOG,GAAMwD,KAAK5D,EAA4B,QAC5D,OAAO2D,EAAQ,EAAI,KAAOzD,EAAkByD,GIsDtBE,CAAiBzD,GAWvC,OATI0B,mBAAS4B,KACTzB,EAAM,eACCA,EADD,CAEFyB,gBACAI,mBAAoBT,EAAcK,KAG1CK,QAAQC,IAAIrB,GACZoB,QAAQC,IAAI/B,GACLA,EAGX,SAASQ,EAASrC,GACd,OAA4C,KAGxB6D,EAHE,IAAI5C,KAGO6C,EAHC9D,EAI3BH,IAAOgE,GAAOL,KAAK3D,IAAOiE,GAAS,SAD9C,IAAwBD,EAAaC,E,OCtE9B,SAASC,EAAT,GAAmD,IAAvBC,EAAsB,EAAtBA,YACzBlB,EAA6FkB,EAA7FlB,eAAgBC,EAA6EiB,EAA7EjB,YAAaC,EAAgEgB,EAAhEhB,eAAgBE,EAAgDc,EAAhDd,eAAgBG,EAAgCW,EAAhCX,YAAaF,EAAmBa,EAAnBb,eAElF,OAAO,6BAAUc,UAAU,gBACzB,kBAACC,EAAD,CAAiBC,MAAO,qGAAsBF,UAAU,YAAYG,MAAOtB,EAAgBuB,MAAOnB,IAClG,kBAACgB,EAAD,CAAiBC,MAAO,0DAAcF,UAAU,SAASG,MAAOrB,EAAasB,MAAOhB,IACpF,kBAACa,EAAD,CAAiBC,MAAO,qGAAsBF,UAAU,YAAYG,MAAOpB,EAAgBqB,MAAOlB,KAWtG,SAASe,EAAT,GAAoF,IAAzDC,EAAwD,EAAxDA,MAAOF,EAAiD,EAAjDA,UAAWG,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,MAC5CC,EAAkB,eAAWL,GAEnC,OAAO,yBAAKA,UAAWK,GACrB,4BAAKH,EAAL,KACA,yBAAKF,UAAU,gBAAf,IAAgCG,EAAhC,KACA,yBAAKH,UAAU,gBAAf,IAAgCI,EAAhC,gF,OCvBG,SAASE,EAAT,GAAkD,IAAvBP,EAAsB,EAAtBA,YACtBjB,EAA2EiB,EAA3EjB,YAAaC,EAA8DgB,EAA9DhB,eAD+B,EAC+BgB,EAA9CN,0BADe,MACM,EADN,IAC+BM,EAAtBV,qBADT,MACyB,EADzB,EAGpD,OADAK,QAAQC,IAAII,GACL,6BAASC,UAAU,2BACtB,wIACA,yBAAKA,UAAU,eACX,kBAACO,EAAD,eAAiBL,MAAM,2IAA6BtD,MAAO6C,GAAwBM,IACnF,kBAACQ,EAAD,eAAiBL,MAAM,sGAAsBtD,MAAOyC,GAAmBU,IACvE,kBAACS,EAAD,eAAgBN,MAAM,qGAAqBtD,MAAOkC,GAAiBiB,IACnE,kBAACS,EAAD,eAAgBN,MAAM,2GAAsBtD,MAAOmC,GAAoBgB,MAYnF,SAASQ,EAAT,GAA+F,IAApEL,EAAmE,EAAnEA,MAAOtD,EAA4D,EAA5DA,MACxB6D,EAAc7D,EADsE,EAArDoC,YACK,IACpC0B,EAAa9D,EAFuE,EAAxCiC,eAEN,IAC5C,OAAO,yBAAKmB,UAAU,qBAClB,4BAAKE,GACL,yBAAKF,UAAU,SAASpD,GACxB,yBAAKoD,UAAU,SAAQ,8BAAOS,EAAYE,QAAQ,IAAlD,6GACA,yBAAKX,UAAU,SAAQ,8BAAOU,EAAWC,QAAQ,IAAjD,sFAWR,SAASH,EAAT,GAA4F,IAAlEN,EAAiE,EAAjEA,MAAOtD,EAA0D,EAA1DA,MACvBgE,EAAahE,EADoE,EAAnDuC,WACI,IAClCuB,EAAa9D,EAFoE,EAAvCiC,eAEJ,IAE5C,OAAO,yBAAKmB,UAAU,oBAClB,4BAAKE,GACL,yBAAKF,UAAU,SAASpD,GACxB,yBAAKoD,UAAU,SAAQ,8BAAOY,EAAWD,QAAQ,IAAjD,6GACA,yBAAKX,UAAU,SAAQ,8BAAOU,EAAWC,QAAQ,IAAjD,4F,yBCrCD,SAASE,EAAT,GAAyG,IAA3EX,EAA0E,EAA1EA,MAAO9C,EAAmE,EAAnEA,KAAmE,IAA7D0D,qBAA6D,MAA7C,KAA6C,EAAvCC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,UAClF,OAAO,yBAAKhB,UAAU,cAClB,4BAAKE,GACL,kBAAC,IAAD,CACIe,MAAO,IACPC,OAAQ,IACR9D,KAAMA,GACN,kBAAC,IAAD,CAAe+D,gBAAgB,QAC/B,kBAAC,IAAD,CAAOC,QAASN,IAChB,kBAAC,IAAD,MACA,kBAAC,IAAD,CAASE,UAAWA,IACpB,kBAAC,IAAD,MACCD,EAAapD,KAAI,SAAA0D,GAAI,OAAI,kBAAC,IAAD,CAAMC,KAAK,WAAWF,QAASC,EAAKtD,GAAIwD,OAAQF,EAAKG,MAAOC,YAAa,EAAGC,KAAK,S,OCbhH,SAASC,EAAT,GAA4F,IAA/DzB,EAA8D,EAA9DA,MAAO9C,EAAuD,EAAvDA,KAAuD,IAAjD0D,qBAAiD,MAAjC,KAAiC,EAA3Bc,EAA2B,EAA3BA,YACnE,OAAO,yBAAK5B,UAAU,aAClB,4BAAKE,GACL,kBAAC,IAAD,CACIe,MAAO,IACPC,OAAQ,IACR9D,KAAMA,EACNyE,OAAQ,CACJC,IAAK,EAAGC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,IAGzC,kBAAC,IAAD,CAAed,gBAAgB,QAC/B,kBAAC,IAAD,CAAOC,QAASN,IAChB,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACCc,EAAYjE,KAAI,SAAA0D,GAAI,OAAI,kBAAC,IAAD,CAAKD,QAASC,EAAKtD,GAAImE,KAAMb,EAAKG,aCrBvE,IAAMW,EAAuB,CAAC,CAAEpE,GAAI,iBAAkByD,MAAO,YACvDY,EAAsB,CAAC,CAAErE,GAAI,iBAAkByD,MAAO,YACtDa,EAAwB,CAAC,CAAEtE,GAAI,cAAeyD,MAAO,YACrDc,EAA0B,CAAC,CAAEvE,GAAI,gBAAiByD,MAAO,YAExD,SAASe,EAAT,GAAuD,IAAnBrE,EAAkB,EAAlBA,QACjCsE,EAAiCC,mBAAQ,iBAAM,CAAC,CAAE1E,GAAI,aAAcyD,MAAO,cAAc,IAEzFkB,EAA2BD,mBAAQ,kBAAMvE,EAAQyE,QAAO,SAAArF,GAAC,QAAMA,EAAE+B,mBAAgB,CAACnB,IAClF0E,EAA0BH,mBAAQ,kBAAMC,EAAyB/E,KAAI,SAAAC,GAAM,MAC5E,CAAEiF,WAA0C,KAA7BjF,EAAOyB,eAAiB,GAAWzB,EAAOoB,kBAAiB,CAAC0D,IAIhF,OAAO,6BAAS1C,UAAU,yBACtB,wNACA,yBAAKA,UAAU,UACX,kBAAC,EAAD,CAAoBE,MAAM,yFAAmB9C,KAAMc,EAAS6C,aAAcoB,IAC1E,kBAAC,EAAD,CAAmBjC,MAAM,yFAAmB9C,KAAMc,EAAS0D,YAAaQ,IACxE,kBAAC,EAAD,CAAoBlC,MAAM,+FAAoB9C,KAAMc,EAAS6C,aAAcsB,IAC3E,kBAAC,EAAD,CAAoBnC,MAAM,6EAAiB9C,KAAMsF,EAA0B3B,aAAcuB,IACzF,kBAAC,EAAD,CAAoBpC,MAAM,6LAAuC9C,KAAMwF,EAAyB7B,aAAcyB,EAAgCxB,UATxG,SAACpE,EAAOU,EAAGwF,GAAX,gBAAsBlG,EAAiB+D,QAAQ,GAA/C,U,OCb3C,SAASoC,EAAT,GAAmD,IAAnB7E,EAAkB,EAAlBA,QAC7B8E,EAAoBP,mBAAQ,iBAAM,CAAC,CAAE1E,GAAI,cAAeyD,MAAO,cAAc,IAC7EyB,EAAmBR,mBAAQ,iBAAM,CAAC,CAAE1E,GAAI,cAAeyD,MAAO,cAAc,IAElF,OAAO,6BAASxB,UAAU,qBACtB,4MACA,yBAAKA,UAAU,UACX,kBAAC,EAAD,CAAoBE,MAAM,yFAAmB9C,KAAMc,EAAS6C,aAAciC,IAC1E,kBAAC,EAAD,CAAmB9C,MAAM,yFAAmB9C,KAAMc,EAAS0D,YAAaqB,MCoBpF,SAASC,IACP,OAAO,yBAAKlD,UAAU,kBAAiB,yBAAKA,UAAU,YAGzCmD,MA9Bf,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACNlF,EADM,KACGmF,EADH,KAEPtD,EAAc7B,EAAQA,EAAQM,OAAS,GAI7C,OAFA8E,qBAAU,YPGL,WAAP,gCOHoBC,GAAaC,MAAK,SAAApG,GAAI,OAAIiG,EAAWjG,QAAU,IAE1D,yBAAK4C,UAAU,gBACpB,4BAAQA,UAAU,cAChB,wIACCD,GAAe,yBAAKC,UAAU,eAAf,mEAA4CpE,IAAOmE,EAAYhE,MAAMC,OAAO,gBAE1E,IAAnBkC,EAAQM,OAAe,kBAAC,EAAD,MACtB,kBAAC,WAAD,KAEE,kBAACsB,EAAD,CAAkBC,YAAaA,IAC/B,kBAAC,EAAD,CAAiBA,YAAaA,IAC9B,kBAAC,EAAD,CAA0B7B,QAASA,IACnC,kBAAC,EAAD,CAAsBA,QAASA,KAEnC,gCACE,yIACA,6VCvBcuF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,SDqI1C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBZ,MAAK,SAAAa,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL9E,QAAQ8E,MAAMA,EAAMC,c","file":"static/js/main.13566656.chunk.js","sourcesContent":["import moment from \"moment\";\r\n\r\nconst criticalCasesDataStartDate = moment(\"13.03.2020\", \"DD.MM.YYYY\");\r\nconst criticalCasesData = [3, 2, 2, 4, 5, 6, 6, 10, 15, 18, 29, 34, 39, 46, 49, 54, 74, 79, 94, 95, 108, 115];\r\n\r\nexport function getCriticalCases(date: Date): number | null {\r\n    const index = moment(date).diff(criticalCasesDataStartDate, \"days\");\r\n    return index < 0 ? null : criticalCasesData[index];\r\n}","import moment from \"moment\";\r\n\r\nexport function getReportId(date:Date){\r\n    return moment(date).format(\"DD/MM/YYYY\");\r\n}","import covid19 from \"../react-app-env\";\r\nimport { getReportId } from \"../utils/getReportId\";\r\n\r\nimport ARCHIVE_REPORTS from \"../data/reports.json\";\r\n\r\nconst REPORTS_MAP = new Map<string, covid19.DailyReport>();\r\n\r\nconst REPORTS = ARCHIVE_REPORTS.map(report => ({...report, date: new Date(report.date)}));\r\n\r\nREPORTS.forEach(report => REPORTS_MAP.set(report.id, report));\r\n\r\nexport function getDailyReportFromArchive(date: Date) {\r\n    return REPORTS_MAP.get(getReportId(date))\r\n}","import covid19 from \"../react-app-env\";\r\nimport moment from \"moment\";\r\nimport { isNumber } from \"util\";\r\n\r\nexport async function getTodayReport(): Promise<covid19.mathdro.DailyReport> {\r\n    const res = await fetch(`https://covid19.mathdro.id/api/countries/israel`);\r\n    const reportData = await res.json();\r\n\r\n    const confirmed = reportData.confirmed.value;\r\n    const deaths = reportData.deaths.value;\r\n    const recovered = reportData.recovered.value;\r\n    const lastUpdate = new Date(reportData.lastUpdate);\r\n\r\n    return { confirmed, deaths, recovered, active: confirmed - (deaths + recovered), lastUpdate };\r\n}\r\n\r\nexport async function getDailyReport(date: Date): Promise<covid19.mathdro.DailyReport> {\r\n    const res = await fetch(`https://covid19.mathdro.id/api/daily/${moment(date).format(\"M-D-YYYY\")}`);\r\n    const globalReport = await res.json();\r\n    const data = globalReport.find((_: any) => _.countryRegion === \"Israel\");\r\n\r\n    const confirmed = parseInt(data?.confirmed);\r\n    const deaths = parseInt(data?.deaths);\r\n    const recovered = parseInt(data?.recovered);\r\n    const active = isNumber(data?.active) ? parseInt(data.active) : confirmed - (deaths + recovered);\r\n\r\n    return { lastUpdate: date, confirmed, deaths, recovered, active };\r\n}","import moment from \"moment\";\r\nimport covid19 from \"../react-app-env\";\r\nimport { getCriticalCases } from \"./getCriticalCases\";\r\nimport { isNumber } from \"util\";\r\nimport { getReportId } from \"../utils/getReportId\";\r\nimport { getDailyReportFromArchive } from \"./getDailyReportFromArchive\";\r\nimport { getTodayReport, getDailyReport } from \"./getDailyReport\";\r\n//import { isNumber } from \"util\";\r\n\r\n// const DATE_FORMAT = \"YYYY-M-D\"\r\n// const ISRAEL_KEY = \"Israel\";\r\n\r\nexport interface DailyReportData {\r\n    date: string;\r\n    confirmed: number;\r\n    deaths: number;\r\n    recovered: number\r\n}\r\nconst DATE_FORMAT = \"DD.MM.YYYY\";\r\nconst START_DATE = moment(\"20.02.2020\", DATE_FORMAT).toDate();\r\n\r\nexport async function getReports(): Promise<covid19.DailyReport[]> {\r\n    const reports: covid19.DailyReport[] = [];\r\n\r\n    const currentDate = START_DATE;\r\n    while (!_isToday(currentDate)) {\r\n        const report = getDailyReportFromArchive(currentDate);\r\n\r\n        if (report) reports.push(report)\r\n        else {\r\n            const basicReport = await getDailyReport(currentDate);\r\n            reports.push(_createDailyReport(basicReport, reports[reports.length - 1]));\r\n        }\r\n\r\n        currentDate.setDate(currentDate.getDate() + 1);\r\n    }\r\n\r\n    const todayBasicReport = await getTodayReport();\r\n\r\n    reports.push(_createDailyReport(todayBasicReport, reports[reports.length - 1]));\r\n\r\n    return reports;\r\n}\r\n\r\nfunction _createDailyReport(basicReport: covid19.mathdro.DailyReport, previousReport: covid19.DailyReport) {\r\n    const { confirmed: totalConfirmed,\r\n        deaths: totalDeaths\r\n        , recovered: totalRecovered\r\n        , active: activeCases,\r\n        lastUpdate: date } = basicReport;\r\n\r\n    const id = getReportId(date);\r\n\r\n    const dailyConfirmed = totalConfirmed - previousReport.totalConfirmed;\r\n    const dailyRecovered = totalRecovered - previousReport.totalRecovered;\r\n    const dailyDeaths = totalDeaths - previousReport.totalDeaths;\r\n\r\n    const closeCases = totalConfirmed - activeCases;\r\n\r\n    let report: covid19.DailyReport = { id, date, totalConfirmed, totalDeaths, totalRecovered, activeCases, closeCases, dailyConfirmed, dailyDeaths, dailyRecovered };\r\n\r\n    const criticalCases = getCriticalCases(date);\r\n\r\n    if (isNumber(criticalCases)) {\r\n        report = {\r\n            ...report,\r\n            criticalCases,\r\n            mildConditionCases: activeCases - criticalCases\r\n        }\r\n    }\r\n    console.log(basicReport);\r\n    console.log(report);\r\n    return report;\r\n}\r\n\r\nfunction _isToday(date: Date) {\r\n    return _getDiffInDays(new Date(), date) === 0;\r\n}\r\n\r\nfunction _getDiffInDays(first: Date, second: Date) {\r\n    return moment(first).diff(moment(second), \"days\");\r\n}","import \"./DailyStatus.css\";\r\n\r\nimport React from 'react';\r\nimport covid19 from \"./react-app-env\";\r\n\r\ninterface Props {\r\n  dailyReport: covid19.DailyReport\r\n}\r\n\r\nexport function CovidDailyStatus({ dailyReport }: Props) {\r\n  const { totalConfirmed, totalDeaths, totalRecovered, dailyConfirmed, dailyDeaths, dailyRecovered } = dailyReport;\r\n\r\n  return < section className=\"daily-status\" >\r\n    <DailyStatusCube title={\"מספר חולים מאומתים\"} className=\"confirmed\" total={totalConfirmed} daily={dailyConfirmed} />\r\n    <DailyStatusCube title={\"מספר המתים\"} className=\"deaths\" total={totalDeaths} daily={dailyDeaths} />\r\n    <DailyStatusCube title={\"מספר חולים שהבריאו\"} className=\"recovered\" total={totalRecovered} daily={dailyRecovered} />\r\n  </section>;\r\n}\r\n\r\ninterface DailyStatusCubeProps {\r\n  title: string;\r\n  className: string;\r\n  total: number;\r\n  daily: number;\r\n}\r\n\r\nfunction DailyStatusCube({ title, className, total, daily }: DailyStatusCubeProps) {\r\n  const componentClassName = `cube ${className}`;\r\n\r\n  return <div className={componentClassName}>\r\n    <h3>{title} </h3>\r\n    <div className=\"total-number\"> {total} </div>\r\n    <div className=\"daily-number\"> {daily} ביממה האחרונה </div>\r\n  </div>;\r\n}","import \"./CasesStatistics.css\";\r\n\r\nimport React from \"react\";\r\nimport covid19 from \"./react-app-env\";\r\n\r\ninterface Props {\r\n    dailyReport: covid19.DailyReport\r\n}\r\n\r\nexport function CasesStatistics({ dailyReport }: Props) {\r\n    const { totalDeaths, totalRecovered, mildConditionCases = 0, criticalCases = 0 } = dailyReport;\r\n    console.log(dailyReport);\r\n    return <section className=\"active-close-statistics\">\r\n        <h2>התפלגות המקרים בארץ</h2>\r\n        <div className=\"cases-panel\">\r\n            <ActiveCasesCube title=\"מספר חולים במצב קל ובינוני\" value={mildConditionCases} {...dailyReport} />\r\n            <ActiveCasesCube title=\"מספר חולים במצב קשה\" value={criticalCases} {...dailyReport} />\r\n            <CloseCasesCube title=\"מספר החולים שנפטרו\" value={totalDeaths} {...dailyReport} />\r\n            <CloseCasesCube title=\"מספר החולים שהחלימו\" value={totalRecovered} {...dailyReport} />\r\n        </div>\r\n    </section>;\r\n}\r\n\r\ninterface ActiveCasesCubeProps {\r\n    title: string;\r\n    value: number;\r\n    activeCases: number;\r\n    totalConfirmed: number;\r\n}\r\n\r\nfunction ActiveCasesCube({ title, value, activeCases, totalConfirmed }: ActiveCasesCubeProps) {\r\n    const activeRatio = value / activeCases * 100;\r\n    const totalRatio = value / totalConfirmed * 100;\r\n    return <div className=\"active-cases-cube\">\r\n        <h3>{title}</h3>\r\n        <div className=\"value\">{value}</div>\r\n        <div className=\"ratio\"><span>{activeRatio.toFixed(1)}</span> מבין החולים הפעילים</div>\r\n        <div className=\"ratio\"><span>{totalRatio.toFixed(1)}</span>מבין כלל המקרים </div>\r\n    </div>;\r\n}\r\n\r\ninterface CloseCasesCubeProps {\r\n    title: string;\r\n    value: number;\r\n    closeCases: number;\r\n    totalConfirmed: number;\r\n}\r\n\r\nfunction CloseCasesCube({ title, value, closeCases, totalConfirmed }: CloseCasesCubeProps) {\r\n    const closeRatio = value / closeCases * 100;\r\n    const totalRatio = value / totalConfirmed * 100;\r\n\r\n    return <div className=\"close-cases-cube\">\r\n        <h3>{title}</h3>\r\n        <div className=\"value\">{value}</div>\r\n        <div className=\"ratio\"><span>{closeRatio.toFixed(1)}</span> מבין המקרים הסגורים</div>\r\n        <div className=\"ratio\"><span>{totalRatio.toFixed(1)}</span> מבין כלל הנדבקים</div>\r\n    </div>\r\n}\r\n","\r\nimport \"./LineChartComponent.css\";\r\n\r\nimport React from \"react\";\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, CartesianGrid, TooltipFormatter } from \"recharts\";\r\n\r\ninterface DataKeyItem {\r\n    id: string;\r\n    color: string;\r\n}\r\n\r\ninterface ChartProps {\r\n    title: string;\r\n    data: any;\r\n    lineDataKeys: DataKeyItem[];\r\n    xAxizDataKeys?: string;\r\n    formatter?: TooltipFormatter;\r\n}\r\n\r\nexport function LineChartComponent({ title, data, xAxizDataKeys = \"id\", lineDataKeys, formatter }: ChartProps) {\r\n    return <div className=\"line-chart\">\r\n        <h3>{title}</h3>\r\n        <LineChart\r\n            width={500}\r\n            height={300}\r\n            data={data}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey={xAxizDataKeys} />\r\n            <YAxis />\r\n            <Tooltip formatter={formatter} />\r\n            <Legend />\r\n            {lineDataKeys.map(item => <Line type=\"monotone\" dataKey={item.id} stroke={item.color} strokeWidth={3} dot={false} />)}\r\n        </LineChart>\r\n    </div>;\r\n}","\r\nimport \"./BarChartComponent.css\";\r\n\r\nimport React from \"react\";\r\nimport { XAxis, YAxis, Tooltip, Legend, CartesianGrid, BarChart, Bar } from \"recharts\";\r\n\r\ninterface DataKeyItem {\r\n    id: string;\r\n    color: string;\r\n}\r\n\r\ninterface ChartProps {\r\n    title: string;\r\n    data: any;\r\n    barDataKeys: DataKeyItem[];\r\n    xAxizDataKeys?: string;\r\n}\r\n\r\nexport function BarChartComponent({ title, data, xAxizDataKeys = \"id\", barDataKeys }: ChartProps) {\r\n    return <div className=\"bar-chart\">\r\n        <h3>{title}</h3>\r\n        <BarChart\r\n            width={500}\r\n            height={300}\r\n            data={data}\r\n            margin={{\r\n                top: 5, right: 30, left: 20, bottom: 5,\r\n            }}\r\n        >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey={xAxizDataKeys} />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            {barDataKeys.map(item => <Bar dataKey={item.id} fill={item.color} />)}\r\n        </BarChart>\r\n    </div>;\r\n}","import \"./ConfirmedCasesStatistics.css\";\r\n\r\nimport React, { useMemo } from \"react\";\r\nimport covid19 from \"./react-app-env\";\r\n\r\nimport { LineChartComponent } from \"./utils/LineChartComponent\";\r\nimport { BarChartComponent } from \"./utils/BarChartComponent\";\r\nimport { TooltipFormatter } from \"recharts\";\r\n\r\ninterface Props {\r\n    reports: covid19.DailyReport[]\r\n}\r\n\r\nconst TOTAL_LINE_DATA_KEYS = [{ id: \"totalConfirmed\", color: \"#8884d8\" }];\r\nconst DAILY_BAR_DATA_KEYS = [{ id: \"dailyConfirmed\", color: \"#8884d8\" }];\r\nconst ACTIVE_LINE_DATA_KEYS = [{ id: \"activeCases\", color: \"#8884d8\" }];\r\nconst CRITICAL_LINE_DATA_KEYS = [{ id: \"criticalCases\", color: \"#c1bc08\" }];\r\n\r\nexport function ConfirmedCasesStatistics({ reports }: Props) {\r\n    const criticalPercentageLineDataKeys = useMemo(() => [{ id: \"percentage\", color: \"#c1bc08\" }], []);\r\n\r\n    const reportsWithCriticalCases = useMemo(() => reports.filter(_ => !!_.criticalCases), [reports]);\r\n    const criticalCasesPercentage = useMemo(() => reportsWithCriticalCases.map(report =>\r\n        ({ percentage: (report.criticalCases || 0) * 100 / report.activeCases })), [reportsWithCriticalCases]);\r\n\r\n    const percentageFormmater: TooltipFormatter = (value, _, __) => `${(value as number).toFixed(2)}%`;\r\n\r\n    return <section className=\"confirmed-cases-panel\">\r\n        <h2>סטטיסטיקות מתקדמות על מספר הנדבקים</h2>\r\n        <div className=\"charts\">\r\n            <LineChartComponent title=\"מספר נדבקים כולל\" data={reports} lineDataKeys={TOTAL_LINE_DATA_KEYS} />\r\n            <BarChartComponent title=\"מספר נדבקים יומי\" data={reports} barDataKeys={DAILY_BAR_DATA_KEYS} />\r\n            <LineChartComponent title=\"מספר חולים פעילים\" data={reports} lineDataKeys={ACTIVE_LINE_DATA_KEYS} />\r\n            <LineChartComponent title=\"חולים במצב קשה\" data={reportsWithCriticalCases} lineDataKeys={CRITICAL_LINE_DATA_KEYS} />\r\n            <LineChartComponent title=\"אחוז החולים במצב קשה מבין כלל החולים\" data={criticalCasesPercentage} lineDataKeys={criticalPercentageLineDataKeys} formatter={percentageFormmater} />\r\n        </div>\r\n    </section>\r\n}","import \"./DeathCasesStatistics.css\";\r\n\r\nimport React, { useMemo } from \"react\";\r\nimport covid19 from \"./react-app-env\";\r\n\r\nimport { LineChartComponent } from \"./utils/LineChartComponent\";\r\nimport { BarChartComponent } from \"./utils/BarChartComponent\";\r\n\r\ninterface Props {\r\n    reports: covid19.DailyReport[]\r\n}\r\n\r\nexport function DeathCasesStatistics({ reports }: Props) {\r\n    const totalLineDataKeys = useMemo(() => [{ id: \"totalDeaths\", color: \"#ba2525\" }], []);\r\n    const dailyBarDataKeys = useMemo(() => [{ id: \"dailyDeaths\", color: \"#ba2525\" }], []);\r\n\r\n    return <section className=\"death-cases-panel\">\r\n        <h2>סטטיסטיקות מתקדמות על מספר המתים</h2>\r\n        <div className=\"charts\">\r\n            <LineChartComponent title=\"מספר נפטרים כולל\" data={reports} lineDataKeys={totalLineDataKeys} />\r\n            <BarChartComponent title=\"מספר נפטרים יומי\" data={reports} barDataKeys={dailyBarDataKeys} />\r\n        </div>\r\n    </section>\r\n}","import './App.css';\r\nimport './Loader.css';\r\n\r\nimport React, { useState, useEffect, Fragment } from 'react';\r\nimport moment from \"moment\";\r\n\r\nimport covid19 from './react-app-env';\r\nimport { getReports } from './providers/getIsraelReports';\r\nimport { CovidDailyStatus } from './DailyStatus';\r\nimport { CasesStatistics } from './CasesStatistics';\r\nimport { ConfirmedCasesStatistics } from './ConfirmedCasesStatistics';\r\nimport { DeathCasesStatistics } from './DeathCasesStatistics';\r\n//import { DownloadComponent } from './utils/DownloadComponent';\r\n\r\nfunction App() {\r\n  const [reports, setReports] = useState([] as covid19.DailyReport[]);\r\n  const dailyReport = reports[reports.length - 1];\r\n\r\n  useEffect(() => { getReports().then(data => setReports(data)) }, []);\r\n\r\n  return <div className=\"covid-19-app\">\r\n    <header className=\"app-header\">\r\n      <h1>מגפת הקורונה בישראל</h1>\r\n      {dailyReport && <div className=\"last-update\">עדכון אחרון:  {moment(dailyReport.date).format(\"DD.MM.YYYY\")}</div>}\r\n    </header>\r\n    {reports.length === 0 ? <Loader /> :\r\n      <Fragment>\r\n        {/* <DownloadComponent filename=\"reports\" data={reports}/> */}\r\n        <CovidDailyStatus dailyReport={dailyReport} />\r\n        <CasesStatistics dailyReport={dailyReport} />\r\n        <ConfirmedCasesStatistics reports={reports} />\r\n        <DeathCasesStatistics reports={reports} />\r\n      </Fragment>}\r\n    <footer>\r\n      <p>נוצר ע\"י רוני קרילקאר</p>\r\n      <div>המידע מוזן כרגע באופן ידני ולכן עדכניות המידע תלויה בעיקר בי :)</div>\r\n    </footer>\r\n  </div>;\r\n}\r\n\r\nfunction Loader() {\r\n  return <div className=\"loader-wrapper\"><div className=\"loader\"></div></div>\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}